version: '3.4'


services:
  #
  # Helper services
  #
  # Traefik for routing requests to API nodes
  traefik:
    image: traefik:alpine
    command: --logLevel=DEBUG
    deploy:
      placement:
        constraints:
          - node.role == manager
          - engine.labels.mongo != true
      labels:
        - traefik.port=8080
        - traefik.backend.loadbalancer.method=drr
        - traefik.frontend.rule=Host:status.nexushub.co
        - traefik.frontend.entryPoints=http,https
        - traefik.backend=traefik
    networks:
      - app
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - nexus_certs:/certs
      - //var/run/docker.sock:/var/run/docker.sock
      - /opt/docker/services/traefik/config.toml:/etc/traefik/traefik.toml
    logging:
      options:
        max-file: 5
        max-size: 10m

  # Certbot for autogenerating let's encrypt certs and pushing them to cloudflare
  certbot:
    image: nexusstats/certbot
    deploy:
      placement:
        constraints:
          - node.role == manager
          - engine.labels.mongo != true
    networks:
      - app
    volumes:
      - nexus_certs:/etc/letsencrypt
    secrets:
      - nexus-cloudflare-token
    logging:
      options:
        max-file: 5
        max-size: 10m

  # Bosun for automatically deploying new builds
  bosun:
    image: nexusstats/bosun
    environment:
      - DEPLOY_BRANCH=production
    deploy:
      placement:
        constraints:
          - node.role == manager
          - engine.labels.mongo != true
      labels:
        - traefik.port=5000
        - traefik.backend.loadbalancer.method=drr
        - traefik.frontend.rule=Host:cd.nexushub.co;Path:/deploy
        - traefik.frontend.entryPoints=http,https
        - traefik.backend=bosun
    networks:
      - app
    secrets:
      - nexus-dockerhub-token
    volumes:
      - /opt/docker/compose:/compose
      - //var/run/docker.sock:/var/run/docker.sock
    logging:
      options:
        max-file: 5
        max-size: 10m

  #
  # API nodes
  #
  api_warframe:
    image: nexusstats/nexus-stats
    deploy:
      replicas: 2
      update_config:
        delay: 60s
        order: start-first
        failure_action: rollback
      placement:
        constraints:
          - engine.labels.mongo != true
      labels:
        - traefik.port=3003
        - traefik.backend.loadbalancer.method=drr
        - traefik.frontend.rule=Host:api.nexushub.co
        - traefik.frontend.entryPoints=http,https
        - traefik.backend=api-warframe
    networks:
      - app
    secrets:
      - nexus-public-key
      - mongo-admin-pwd
      - nexus-cubic-key
      - nexus-cubic-secret
      - nexus-warframe-bot-key
      - nexus-warframe-bot-secret
      - tsm-api-key
    environment:
      - DOCKER=true
      - NODE_ENV=production
      - NEXUS_TARGET_NODE=api-warframe
    logging:
      options:
        max-file: 5
        max-size: 10m
  api_wowclassic:
    image: nexusstats/nexus-stats
    deploy:
      replicas: 2
      update_config:
        delay: 60s
        order: start-first
        failure_action: rollback
      placement:
        constraints:
          - engine.labels.mongo != true
      labels:
        - traefik.port=3004
        - traefik.backend.loadbalancer.method=drr
        - traefik.frontend.rule=Host:api.nexushub.co;PathPrefix=/wow-classic
        - traefik.frontend.entryPoints=http,https
        - traefik.backend=api-wowclassic
    networks:
      - app
    secrets:
      - nexus-public-key
      - mongo-admin-pwd
      - nexus-cubic-key
      - nexus-cubic-secret
      - nexus-warframe-bot-key
      - nexus-warframe-bot-secret
      - tsm-api-key
    environment:
      - DOCKER=true
      - NODE_ENV=production
      - NEXUS_TARGET_NODE=api-wowclassic
    logging:
      options:
        max-file: 5
        max-size: 10m

  auth:
    image: nexusstats/nexus-stats
    deploy:
      replicas: 2
      update_config:
        delay: 60s
        order: start-first
        failure_action: rollback
      placement:
        constraints:
          - engine.labels.mongo != true
      labels:
        - traefik.port=3030
        - traefik.backend.loadbalancer.method=drr
        - traefik.frontend.rule=Host:auth.nexushub.co
        - traefik.frontend.entryPoints=http,https
        - traefik.backend=auth
    networks:
      - app
    secrets:
      - nexus-public-key
      - nexus-private-key
      - mongo-admin-pwd
    environment:
      - DOCKER=true
      - NODE_ENV=production
      - NEXUS_TARGET_NODE=auth
    logging:
      options:
        max-file: 5
        max-size: 10m

  ui:
    image: nexusstats/nexus-stats
    deploy:
      replicas: 2
      update_config:
        delay: 60s
        order: start-first
        failure_action: rollback
      placement:
        constraints:
          - engine.labels.mongo != true
      labels:
        - traefik.port=3000
        - traefik.backend.loadbalancer.method=drr
        - traefik.frontend.rule=Host:nexushub.co,wow-classic.nexushub.co
        - traefik.frontend.redirect.regex=^https?://wow-classic.nexushub.co/(.*)
        - traefik.frontend.redirect.replacement=https://nexushub.co/wow-classic/$${1}
        - traefik.frontend.entryPoints=http,https
        - traefik.backend=ui
    networks:
      - app
    secrets:
      - nexus-public-key
      - mongo-admin-pwd
      - nexus-cubic-key
      - nexus-cubic-secret
    environment:
      - DOCKER=true
      - NODE_ENV=production
      - NEXUS_TARGET_NODE=ui
    logging:
      options:
        max-file: 5
        max-size: 10m

  #
  # Background Services
  #
  # Updates Orders Per Minute values
  warframe_opm:
    image: nexusstats/nexus-stats
    deploy:
      placement:
        constraints:
          - engine.labels.mongo != true
    networks:
      - app
    secrets:
      - nexus-cubic-key
      - nexus-cubic-secret
    environment:
      - DOCKER=true
      - NODE_ENV=production
    logging:
      options:
        max-file: 5
        max-size: 10m
    entrypoint: /bin/sh -c "cd /app/nexushub && node services/warframe/opm.js"

  # Clears/Modifies outdated orders
  warframe_clear:
    image: nexusstats/nexus-stats
    deploy:
      placement:
        constraints:
          - engine.labels.mongo != true
    networks:
      - app
    secrets:
      - nexus-cubic-key
      - nexus-cubic-secret
    environment:
      - DOCKER=true
      - NODE_ENV=production
    logging:
      options:
        max-file: 5
        max-size: 10m
    entrypoint: /bin/sh -c "cd /app/nexushub && node services/warframe/clear.js"

  # Adds Warframe Market orders
  warframe_wfm:
    image: nexusstats/nexus-stats
    deploy:
      replicas: 0
      placement:
        constraints:
          - engine.labels.mongo != true
    networks:
      - app
    secrets:
      - nexus-cubic-key
      - nexus-cubic-secret
    environment:
      - DOCKER=true
      - NODE_ENV=production
    logging:
      options:
        max-file: 5
        max-size: 10m
    entrypoint: /bin/sh -c "cd /app/nexushub && node services/warframe/wfm.js"

  # Add new TSM scans
  wowclassic_scans:
    image: nexusstats/nexus-stats
    deploy:
      placement:
        constraints:
          - engine.labels.mongo != true
    networks:
      - app
    secrets:
      - nexus-cubic-key
      - nexus-cubic-secret
      - tsm-api-key
    environment:
      - DOCKER=true
      - NODE_ENV=production
    logging:
      options:
        max-file: 5
        max-size: 10m
    entrypoint: /bin/sh -c "cd /app/nexushub && node services/wow-classic/scans.js"



secrets:
  nexus-dockerhub-token:
    external: true

  nexus-cloudflare-token:
    external: true

  nexus-ga-key:
    external: true

  nexus-cubic-key:
    external: true
  nexus-cubic-secret:
    external: true

  nexus-warframe-bot-key:
    external: true
  nexus-warframe-bot-secret:
    external: true

  tsm-api-key:
    external: true


volumes:
  nexus_certs:
